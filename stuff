<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Test.aspx.cs" Inherits="Internal_ClearOne_Test" %>


<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Canvas</title>
    <style>
      body {
        margin: 0;
        overflow: hidden;
        background: #ccc;
      }
      .toolbar {
        width: 150px;
        height: 75px;
        background: #ccc;
        padding: 5px;
      }
      input[type="color"], button {
        width: 90%;
        margin: 0 auto;
        display: block;
      }
      input[type="range"] {
        width: 70%;
      }
       span {
         position: relative;
         bottom: 5px;
       }
    </style>
  </head>
  <body>
    <div class="toolbar">
      <input type="color" aria-label="select pen color">
      <input type="range" min="2" max="50" value="30" aria-label="select pen size"><span class="output">30</span>
      <button>Clear canvas</button>
       
    </div>

    <canvas class="myCanvas">
      <p>Add suitable fallback here.</p>
    </canvas>

    <script>

        window.addEventListener('keydown', this.check, false);
        window.addEventListener('keyup', this.checkUp, false);
        //window.addEventListener('click', this.checkClick, false);

        //let's give player 10 projectiles
        //two arrays, one for position and one for active
        //activeIndex = 0;
        //when projectile is fired, 

        var projectile = {
            posX: 0,
            posY: 0,
            isActive: false

        };

        var projectiles = [];

        for (var i = 0; i < 10; i++) {

            projectiles.push({
                posX: 0,
                posY: 0,
                isActive: false
            })
        }
        var nextIndex = 0;

        var enemyX = 800;
        var enemyY = 100;
        var enemyAlive = true;

function check(e) {
    //alert(e.keyCode);
    //projectiles[0]["isActive"] = true;
    //alert(projectiles[0]["isActive"]);
    //alert(projectiles[0]["posY"]);
    //a = 65
    // d = 68
    //w = 87
    //s = 83
    //alert(" " + curX + " " + curY);
    //pressed = true;

    switch (e.keyCode) {
          case 65:
            curX = curX - 10;
            break;
        case 68:
            curX = curX + 10;
            break;
        case 87:
            curY = curY - 10;
            break;
        case 83:
            curY = curY + 10;
            break;
    }
  

        }

        function checkUp(e) {
            
            //pressed = false;
        }

        function checkClick(e) {
            
            pressed = true;
        }

      var canvas = document.querySelector('.myCanvas');
      var width = canvas.width = window.innerWidth;
      var height = canvas.height = window.innerHeight-85;
      var ctx = canvas.getContext('2d');
      ctx.fillStyle = 'rgb(0,0,0)';
      ctx.fillRect(0,0,width,height);
      var colorPicker = document.querySelector('input[type="color"]');
      var sizePicker = document.querySelector('input[type="range"]');
      var output = document.querySelector('.output');
      var clearBtn = document.querySelector('button');
      // covert degrees to radians
      function degToRad(degrees) {
        return degrees * Math.PI / 180;
      };
      // update sizepicker output value
      sizePicker.oninput = function() {
        output.textContent = sizePicker.value;
      }
      // store mouse pointer coordinates, and whether the button is pressed
      var curX = 800;
      var curY = 600;
        var pressed = false;
        var firing = false;

        var pX = 0;
        var pY = 0;

        var clicked = false;

        var score = 0;
      // update mouse pointer coordinates
      document.onmousemove = function(e) {
        //curX = (window.Event) ? e.pageX : e.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft);
        //curY = (window.Event) ? e.pageY : e.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop);
      }
      canvas.onmousedown = function() {
          pressed = true;
          clicked = true;
        };

       
      canvas.onmouseup = function() {
          pressed = false;
          clicked = false;
      }
      clearBtn.onclick = function() {
        ctx.fillStyle = 'rgb(0,0,0)';
        ctx.fillRect(0,0,width,height);
      }
      function draw() {
          if (true) {
              for (var i = 0; i < 10; i++) {
                  if (projectiles[i]["isActive"]) {
                      projectiles[i]["posY"] -= 10;
                      if (projectiles[i]["posY"] < -10) {
                          projectiles[i]["isActive"] = false;
                          projectiles[i]["posX"] = 0;
                          projectiles[i]["posY"] = 0;
                      }
                      //check position with error of 30
                      
                      if ((projectiles[i]["posX"]<= enemyX + 30 && projectiles[i]["posX"]>= enemyX - 30)&&
                          (projectiles[i]["posY"]<= enemyY + 30 && projectiles[i]["posY"]>= enemyY - 30) && enemyAlive) {
                          enemyAlive = false;
                          enemyY = 100;
                          projectiles[i]["isActive"] = false;
                          projectiles[i]["posX"] = 0;
                          projectiles[i]["posY"] = 0;
                      }
                  }
                  
              }

              //if enemy passes player position, lose
              if (enemyY >= pY) {
                  enemyY = 100;
                  //decrease lives or something

              }


              //if (firing)
                 // pY = pY - 10;

              ctx.fillStyle = 'rgb(0,0,0)';
        ctx.fillRect(0,0,width,height);


          ctx.fillStyle = "#FF0000";//colorPicker.value;
          ctx.beginPath();
              ctx.arc(curX, curY - 85, sizePicker.value, degToRad(0), degToRad(360), false);

              ctx.fill();

              //enemy
              if (enemyAlive == true) {
                  enemyY += 1;
                  ctx.beginPath();
                  ctx.arc(enemyX, enemyY - 85, sizePicker.value, degToRad(0), degToRad(360), false);

                  ctx.fill();

              }

              //if enemy is dead
              else {
                  enemyAlive = true;
                  enemyX = Math.floor(Math.random() * window.innerWidth);
                  //increase points or something
                  score += 100;
                  
                 
              }
              ctx.font = "30px Arial";   
                ctx.fillText(score, 10, 100);

               //ctx.arc(pX, pY - 85, 10, degToRad(0), degToRad(360), false);

              //ctx.fill();

              

               for (var i = 0; i < 10; i++) {
                   if (projectiles[i]["isActive"]) {
                      ctx.beginPath();
                      ctx.arc(projectiles[i]["posX"], projectiles[i]["posY"] - 85, 10, degToRad(0), degToRad(360), false);

                        ctx.fill();

                  }
              }

              
              if (pressed) {
                  if (nextIndex >= 10)
                      nextIndex = 0;
                  pX = curX;
                  pY = curY - 50;
                  firing = true;
                  projectiles[nextIndex]["isActive"] = true;
                  projectiles[nextIndex]["posX"] = pX;
                  projectiles[nextIndex]["posY"] = pY;
                  nextIndex++;
                  pressed = false;
              }
              
        }
        requestAnimationFrame(draw);
      }
      draw();
    </script>
  </body>
</html>
